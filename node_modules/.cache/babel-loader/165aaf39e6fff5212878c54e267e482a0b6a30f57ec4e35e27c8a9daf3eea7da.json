{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\n// import { taskReducer } from \"./tasks/tasksSlice\";\n\n// export const store = configureStore({\n//   reducer: {\n//     tasks: taskReducer,\n//   },\n// });\n\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { taskApi } from \"./tasks/slice\";\nexport const store = configureStore({\n  reducer: {\n    [taskApi.reducerPath]: taskApi.reducer\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), taskApi.middleware]\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","setupListeners","taskApi","store","reducer","reducerPath","middleware","getDefaultMiddleware","dispatch"],"sources":["/Users/artemfaust/dev/reactlessons/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n// import { taskReducer } from \"./tasks/tasksSlice\";\n\n// export const store = configureStore({\n//   reducer: {\n//     tasks: taskReducer,\n//   },\n// });\n\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\n\nimport { taskApi } from \"./tasks/slice\";\n\nexport const store = configureStore({\n  reducer: {\n    [taskApi.reducerPath]: taskApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    taskApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,SAASC,OAAO,QAAQ,eAAe;AAEvC,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACP,CAACF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACE;EACjC,CAAC;EACDE,UAAU,EAAGC,oBAAoB,IAAK,CACpC,GAAGA,oBAAoB,CAAC,CAAC,EACzBL,OAAO,CAACI,UAAU;AAEtB,CAAC,CAAC;AAEFL,cAAc,CAACE,KAAK,CAACK,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}